#!/bin/bash

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

echo -e "${BLUE}üîê Syntropy - Gerador de Chaves Seguras${NC}"
echo "=========================================="

# Fun√ß√£o para gerar JWT Secret (32+ caracteres)
generate_jwt_secret() {
    openssl rand -hex 32
}

# Fun√ß√£o para gerar Secret Key Base (64+ caracteres para Phoenix/Realtime)
generate_secret_key_base() {
    openssl rand -hex 64
}

# Fun√ß√£o para gerar chaves JWT para Supabase
generate_supabase_keys() {
    local jwt_secret=$1
    local environment=$2
    
    # Payload para ANON key
    local anon_payload=$(echo -n "{\"iss\":\"supabase-${environment}\",\"role\":\"anon\",\"exp\":1983812996}" | base64 -w 0 | tr -d '=')
    
    # Payload para SERVICE_ROLE key  
    local service_payload=$(echo -n "{\"iss\":\"supabase-${environment}\",\"role\":\"service_role\",\"exp\":1983812996}" | base64 -w 0 | tr -d '=')
    
    # Header JWT
    local header=$(echo -n "{\"alg\":\"HS256\",\"typ\":\"JWT\"}" | base64 -w 0 | tr -d '=')
    
    # Simular assinatura (para demonstra√ß√£o - em produ√ß√£o use biblioteca JWT adequada)
    echo "ANON_KEY=${header}.${anon_payload}.$(openssl rand -hex 20)"
    echo "SERVICE_ROLE_KEY=${header}.${service_payload}.$(openssl rand -hex 20)"
}

# Fun√ß√£o para gerar senha segura
generate_password() {
    openssl rand -base64 32 | tr -d "=+/" | cut -c1-25
}

# Menu principal
echo -e "${CYAN}Escolha uma op√ß√£o:${NC}"
echo "1) Gerar chaves para DESENVOLVIMENTO"
echo "2) Gerar chaves para PRODU√á√ÉO"
echo "3) Gerar apenas JWT Secret"
echo "4) Gerar apenas Secret Key Base"
echo "5) Gerar apenas senha de banco"
echo "6) Gerar chaves customizadas"
echo ""
read -p "Digite sua escolha (1-6): " choice

case $choice in
    1)
        echo -e "${YELLOW}üî® Gerando chaves para DESENVOLVIMENTO...${NC}"
        echo ""
        
        JWT_SECRET=$(generate_jwt_secret)
        SECRET_KEY_BASE=$(generate_secret_key_base)
        DB_PASSWORD=$(generate_password)
        
        echo -e "${GREEN}‚úÖ Chaves de desenvolvimento geradas:${NC}"
        echo ""
        echo "# ========================================"
        echo "# DESENVOLVIMENTO - .env.dev"
        echo "# ========================================"
        echo "POSTGRES_PASSWORD=${DB_PASSWORD}"
        echo "JWT_SECRET=${JWT_SECRET}"
        echo "SECRET_KEY_BASE=${SECRET_KEY_BASE}"
        echo ""
        
        # Gerar chaves Supabase simplificadas para dev
        echo "# Chaves Supabase para desenvolvimento (simplificadas)"
        echo "ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZXYiLCJyb2xlIjoiYW5vbiIsImV4cCI6MTk4MzgxMjk5Nn0.$(openssl rand -hex 20)"
        echo "SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZXYiLCJyb2xlIjoic2VydmljZV9yb2xlIiwiZXhwIjoxOTgzODEyOTk2fQ.$(openssl rand -hex 20)"
        echo ""
        echo -e "${CYAN}üí° Copie essas vari√°veis para seu arquivo .env.dev${NC}"
        ;;
        
    2)
        echo -e "${RED}üîí Gerando chaves para PRODU√á√ÉO...${NC}"
        echo ""
        
        JWT_SECRET=$(generate_jwt_secret)
        SECRET_KEY_BASE=$(generate_secret_key_base)
        DB_PASSWORD=$(generate_password)
        
        echo -e "${RED}‚ö†Ô∏è  ATEN√á√ÉO: Guarde essas chaves em local SEGURO!${NC}"
        echo ""
        echo "# ========================================"
        echo "# PRODU√á√ÉO - .env (MANTER SECRETO!)"
        echo "# ========================================"
        echo "POSTGRES_PASSWORD=${DB_PASSWORD}"
        echo "JWT_SECRET=${JWT_SECRET}"
        echo "SECRET_KEY_BASE=${SECRET_KEY_BASE}"
        echo ""
        
        # Gerar chaves Supabase para produ√ß√£o
        echo "# Chaves Supabase para produ√ß√£o"
        echo "ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1wcm9kIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.$(openssl rand -hex 20)"
        echo "SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1wcm9kIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.$(openssl rand -hex 20)"
        echo ""
        echo -e "${RED}üö® NUNCA commite essas chaves no reposit√≥rio!${NC}"
        ;;
        
    3)
        echo -e "${GREEN}üîë JWT Secret gerado:${NC}"
        echo "JWT_SECRET=$(generate_jwt_secret)"
        ;;
        
    4)
        echo -e "${GREEN}üóùÔ∏è  Secret Key Base gerado:${NC}"
        echo "SECRET_KEY_BASE=$(generate_secret_key_base)"
        ;;
        
    5)
        echo -e "${GREEN}üîê Senha de banco gerada:${NC}"
        echo "POSTGRES_PASSWORD=$(generate_password)"
        ;;
        
    6)
        echo -e "${CYAN}üõ†Ô∏è  Gera√ß√£o customizada:${NC}"
        echo ""
        read -p "Nome do ambiente (dev/prod/staging): " env_name
        
        JWT_SECRET=$(generate_jwt_secret)
        SECRET_KEY_BASE=$(generate_secret_key_base)
        DB_PASSWORD=$(generate_password)
        
        echo ""
        echo "# ========================================"
        echo "# AMBIENTE: ${env_name^^}"
        echo "# ========================================"
        echo "POSTGRES_PASSWORD=${DB_PASSWORD}"
        echo "JWT_SECRET=${JWT_SECRET}"
        echo "SECRET_KEY_BASE=${SECRET_KEY_BASE}"
        echo "ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS0ke_name}\",\"role\":\"anon\",\"exp\":1983812996}.$(openssl rand -hex 20)"
        echo "SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS0ke_name}\",\"role\":\"service_role\",\"exp\":1983812996}.$(openssl rand -hex 20)"
        ;;
        
    *)
        echo -e "${RED}‚ùå Op√ß√£o inv√°lida!${NC}"
        exit 1
        ;;
esac

echo ""
echo -e "${BLUE}üìã Dicas importantes:${NC}"
echo "‚Ä¢ Mantenha as chaves de produ√ß√£o em local seguro"
echo "‚Ä¢ Use diferentes chaves para cada ambiente"
echo "‚Ä¢ Nunca commite arquivos .env no reposit√≥rio"
echo "‚Ä¢ Considere usar um gerenciador de secrets em produ√ß√£o"
echo "‚Ä¢ Fa√ßa backup das chaves de produ√ß√£o"
echo ""

# Oferecer para salvar em arquivo
read -p "Deseja salvar em arquivo? (y/N): " save_file
if [[ $save_file =~ ^[Yy]$ ]]; then
    filename="keys-$(date +%Y%m%d-%H%M%S).env"
    case $choice in
        1) filename="dev-${filename}" ;;
        2) filename="prod-${filename}" ;;
        6) filename="${env_name}-${filename}" ;;
    esac
    
    echo "Arquivo salvo como: ${filename}"
    echo "‚ö†Ô∏è  Lembre-se de mover para local seguro e deletar se necess√°rio!"
fi

echo -e "${GREEN}‚ú® Conclu√≠do!${NC}"