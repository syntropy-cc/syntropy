---
description: 
globs: 
alwaysApply: false
---
# Syntropy UI Design System

## Project Context
Syntropy is an integrated open-source ecosystem combining practical learning, collaborative development, and scientific research. This document provides comprehensive UI guidelines for ALL components and features across the platform.

## Color System

### Core Brand Colors
```css
:root {
  /* Primary Gradient Spectrum */
  --syntropy-blue: #0060FF;      /* Electric Blue - Start */
  --syntropy-purple-mid: #6B00FF; /* Mid Purple */
  --syntropy-purple: #9D00FF;     /* Techno Purple - End */
  --syntropy-orange: #FF6B00;     /* Burnt Orange - Portfolio */
  
  /* Extended Color Palette */
  --syntropy-cyan: #00D4FF;       /* For highlights and accents */
  --syntropy-pink: #FF0080;       /* For special features */
  --syntropy-green: #00FF88;      /* For success states */
  
  /* Neutral Colors */
  --dark-primary: #0A0E27;        /* Main background */
  --dark-secondary: #141B3C;      /* Card backgrounds */
  --dark-tertiary: #1E2749;       /* Elevated surfaces */
  --dark-quaternary: #283156;     /* Hover states */
  
  /* Text Colors */
  --text-primary: #FFFFFF;
  --text-secondary: #A0A9CC;
  --text-tertiary: #6B7280;
  --text-muted: #4B5563;
}
```

### Application Color Mapping
```css
/* Main Applications */
[data-app="learn"], .learn-component {
  --app-primary: #0060FF;
  --app-gradient: linear-gradient(135deg, #0060FF 0%, #0099FF 100%);
  --app-glow: 0 0 40px rgba(0, 96, 255, 0.6);
}

[data-app="projects"], .projects-component {
  --app-primary: #6B00FF;
  --app-gradient: linear-gradient(135deg, #4D00CC 0%, #8000FF 100%);
  --app-glow: 0 0 40px rgba(107, 0, 255, 0.6);
}

[data-app="labs"], .labs-component {
  --app-primary: #9D00FF;
  --app-gradient: linear-gradient(135deg, #8000E6 0%, #B300FF 100%);
  --app-glow: 0 0 40px rgba(157, 0, 255, 0.6);
}

[data-app="portfolio"], .portfolio-component {
  --app-primary: #FF6B00;
  --app-gradient: linear-gradient(135deg, #FF5500 0%, #FF8833 100%);
  --app-glow: 0 0 40px rgba(255, 107, 0, 0.6);
}
```

### Secondary Features Color System
```css
/* Community & Social Features */
.community-feature {
  --feature-color: #00D4FF;
  --feature-gradient: linear-gradient(135deg, #00B4E6 0%, #00E4FF 100%);
}

/* Contribution & GitHub Integration */
.contribution-feature {
  --feature-color: #00FF88;
  --feature-gradient: linear-gradient(135deg, #00CC6A 0%, #00FF88 100%);
}

/* Metrics & Analytics */
.analytics-feature {
  --feature-color: #FF0080;
  --feature-gradient: linear-gradient(135deg, #E6006E 0%, #FF1A8C 100%);
}

/* Documentation & Resources */
.docs-feature {
  --feature-color: #FFD700;
  --feature-gradient: linear-gradient(135deg, #FFC700 0%, #FFE03D 100%);
}
```

## Typography System

### Font Stack
```css
:root {
  --font-display: 'SF Pro Display', 'Inter', -apple-system, system-ui, sans-serif;
  --font-body: 'SF Pro Text', 'Inter', -apple-system, system-ui, sans-serif;
  --font-mono: 'SF Mono', 'JetBrains Mono', 'Consolas', monospace;
  
  /* Advanced Typography Features */
  --font-features-display: 'ss01' on, 'ss02' on, 'cv01' on, 'cv11' on;
  --font-features-body: 'kern' on, 'liga' on, 'calt' on;
}
```

### Type Scale with Fluid Sizing
```css
/* Display Sizes */
--text-display-1: clamp(3rem, 8vw, 6rem);      /* 48-96px */
--text-display-2: clamp(2.5rem, 6vw, 4.5rem);  /* 40-72px */
--text-display-3: clamp(2rem, 5vw, 3.5rem);    /* 32-56px */

/* Heading Sizes */
--text-h1: clamp(2rem, 4vw, 3rem);             /* 32-48px */
--text-h2: clamp(1.5rem, 3vw, 2.25rem);        /* 24-36px */
--text-h3: clamp(1.25rem, 2.5vw, 1.75rem);     /* 20-28px */
--text-h4: clamp(1.125rem, 2vw, 1.5rem);       /* 18-24px */

/* Body Sizes */
--text-body-lg: clamp(1.125rem, 1.5vw, 1.25rem); /* 18-20px */
--text-body: 1rem;                                /* 16px */
--text-body-sm: 0.875rem;                         /* 14px */
--text-caption: 0.75rem;                          /* 12px */

/* Line Heights */
--leading-display: 1.1;
--leading-heading: 1.3;
--leading-body: 1.6;
--leading-relaxed: 1.8;
```

## Component Library

### Hero Sections
```css
.hero-section {
  min-height: 100vh;
  position: relative;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
}

.hero-gradient-bg {
  position: absolute;
  inset: 0;
  background: radial-gradient(
    ellipse at center top,
    rgba(var(--app-primary-rgb), 0.15) 0%,
    transparent 50%
  ),
  radial-gradient(
    ellipse at center bottom,
    rgba(var(--app-primary-rgb), 0.1) 0%,
    transparent 50%
  );
  filter: blur(100px);
  animation: pulse 4s ease-in-out infinite;
}

@keyframes pulse {
  0%, 100% { opacity: 0.8; }
  50% { opacity: 1; }
}

.hero-title {
  font-size: var(--text-display-1);
  font-weight: 900;
  letter-spacing: -0.02em;
  background: linear-gradient(
    135deg,
    var(--text-primary) 0%,
    var(--text-secondary) 100%
  );
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  text-align: center;
  margin-bottom: 1.5rem;
}

.hero-subtitle {
  font-size: var(--text-body-lg);
  color: var(--text-secondary);
  text-align: center;
  max-width: 600px;
  margin: 0 auto;
  line-height: var(--leading-relaxed);
}
```

### Glass Cards with Hover Effects
```css
.card {
  background: rgba(20, 27, 60, 0.4);
  backdrop-filter: blur(20px) saturate(180%);
  -webkit-backdrop-filter: blur(20px) saturate(180%);
  border: 1px solid rgba(255, 255, 255, 0.08);
  border-radius: 20px;
  padding: 32px;
  position: relative;
  overflow: hidden;
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

.card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 1px;
  background: linear-gradient(
    90deg,
    transparent 0%,
    var(--app-primary) 50%,
    transparent 100%
  );
  opacity: 0;
  transition: opacity 0.4s ease;
}

.card:hover {
  transform: translateY(-8px) scale(1.02);
  background: rgba(20, 27, 60, 0.6);
  border-color: rgba(var(--app-primary-rgb), 0.3);
  box-shadow: 
    0 20px 40px rgba(0, 0, 0, 0.3),
    var(--app-glow);
}

.card:hover::before {
  opacity: 1;
  animation: shimmer 2s ease infinite;
}

@keyframes shimmer {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}
```

### Feature Cards (Non-App Specific)
```css
.feature-card {
  background: linear-gradient(
    135deg,
    rgba(255, 255, 255, 0.03) 0%,
    rgba(255, 255, 255, 0.01) 100%
  );
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.06);
  border-radius: 16px;
  padding: 24px;
  transition: all 0.3s ease;
}

.feature-card:hover {
  background: linear-gradient(
    135deg,
    rgba(255, 255, 255, 0.05) 0%,
    rgba(255, 255, 255, 0.02) 100%
  );
  border-color: rgba(255, 255, 255, 0.1);
  transform: translateY(-4px);
}

.feature-icon {
  width: 48px;
  height: 48px;
  border-radius: 12px;
  background: var(--feature-gradient, var(--app-gradient));
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 16px;
  position: relative;
}

.feature-icon::after {
  content: '';
  position: absolute;
  inset: -1px;
  border-radius: 12px;
  background: var(--feature-gradient, var(--app-gradient));
  filter: blur(10px);
  opacity: 0.5;
  z-index: -1;
}
```

### Buttons with Advanced States
```css
.btn {
  position: relative;
  font-weight: 600;
  border-radius: 12px;
  padding: 14px 28px;
  font-size: 1rem;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  cursor: pointer;
  overflow: hidden;
  display: inline-flex;
  align-items: center;
  gap: 8px;
}

/* Primary Button with Gradient */
.btn-primary {
  background: var(--app-gradient, linear-gradient(135deg, #0060FF 0%, #0099FF 100%));
  color: white;
  border: none;
  box-shadow: 0 4px 20px rgba(var(--app-primary-rgb, 0, 96, 255), 0.25);
}

.btn-primary::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.3);
  transform: translate(-50%, -50%);
  transition: width 0.6s, height 0.6s;
}

.btn-primary:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 30px rgba(var(--app-primary-rgb, 0, 96, 255), 0.35);
}

.btn-primary:active::before {
  width: 300px;
  height: 300px;
}

/* Secondary Button with Border */
.btn-secondary {
  background: transparent;
  color: var(--app-primary, #0060FF);
  border: 2px solid var(--app-primary, #0060FF);
  position: relative;
  overflow: hidden;
}

.btn-secondary::after {
  content: '';
  position: absolute;
  inset: 0;
  background: var(--app-gradient, linear-gradient(135deg, #0060FF 0%, #0099FF 100%));
  opacity: 0;
  transition: opacity 0.3s ease;
}

.btn-secondary span {
  position: relative;
  z-index: 1;
}

.btn-secondary:hover::after {
  opacity: 0.1;
}

.btn-secondary:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 20px rgba(var(--app-primary-rgb, 0, 96, 255), 0.2);
}

/* Ghost Button */
.btn-ghost {
  background: rgba(255, 255, 255, 0.05);
  color: var(--text-secondary);
  border: 1px solid rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
}

.btn-ghost:hover {
  background: rgba(255, 255, 255, 0.08);
  color: var(--text-primary);
  border-color: rgba(255, 255, 255, 0.2);
  transform: translateY(-1px);
}
```

### Navigation Components
```css
.navbar {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  height: 72px;
  background: rgba(10, 14, 39, 0.7);
  backdrop-filter: blur(20px) saturate(180%);
  -webkit-backdrop-filter: blur(20px) saturate(180%);
  border-bottom: 1px solid rgba(255, 255, 255, 0.08);
  z-index: 1000;
  transition: all 0.3s ease;
}

.navbar.scrolled {
  height: 64px;
  background: rgba(10, 14, 39, 0.9);
  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.3);
}

.nav-item {
  color: var(--text-secondary);
  font-weight: 500;
  padding: 8px 16px;
  border-radius: 8px;
  transition: all 0.2s ease;
  position: relative;
}

.nav-item::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 50%;
  width: 0;
  height: 2px;
  background: var(--app-gradient);
  transform: translateX(-50%);
  transition: width 0.3s ease;
}

.nav-item:hover {
  color: var(--app-primary);
  background: rgba(var(--app-primary-rgb), 0.1);
}

.nav-item:hover::after {
  width: 80%;
}

.nav-item.active {
  color: var(--app-primary);
  background: rgba(var(--app-primary-rgb), 0.15);
}
```

### Section Containers
```css
.section {
  padding: 120px 0;
  position: relative;
  overflow: hidden;
}

.section-alt {
  background: linear-gradient(
    180deg,
    transparent 0%,
    rgba(20, 27, 60, 0.3) 50%,
    transparent 100%
  );
}

.container {
  width: 100%;
  max-width: 1280px;
  margin: 0 auto;
  padding: 0 24px;
}

@media (min-width: 768px) {
  .container { padding: 0 32px; }
}

@media (min-width: 1024px) {
  .container { padding: 0 48px; }
}
```

### Feature Showcases
```css
.feature-showcase {
  display: grid;
  grid-template-columns: 1fr;
  gap: 80px;
  align-items: center;
}

@media (min-width: 1024px) {
  .feature-showcase {
    grid-template-columns: 1fr 1fr;
    gap: 120px;
  }
  
  .feature-showcase.reverse {
    direction: rtl;
  }
  
  .feature-showcase.reverse > * {
    direction: ltr;
  }
}

.feature-content h2 {
  font-size: var(--text-h1);
  font-weight: 800;
  margin-bottom: 24px;
  background: linear-gradient(
    135deg,
    var(--text-primary) 0%,
    var(--text-secondary) 100%
  );
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

.feature-visual {
  position: relative;
  border-radius: 20px;
  overflow: hidden;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
}

.feature-visual img {
  width: 100%;
  height: auto;
  display: block;
}

.feature-visual::before {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(
    135deg,
    rgba(var(--app-primary-rgb), 0.1) 0%,
    transparent 100%
  );
  opacity: 0;
  transition: opacity 0.3s ease;
}

.feature-visual:hover::before {
  opacity: 1;
}
```

### Icon System
```css
.icon-wrapper {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

.icon-circle {
  width: 64px;
  height: 64px;
  border-radius: 50%;
  background: var(--app-gradient);
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  transition: all 0.3s ease;
}

.icon-circle::after {
  content: '';
  position: absolute;
  inset: -2px;
  border-radius: 50%;
  background: var(--app-gradient);
  filter: blur(15px);
  opacity: 0.5;
  z-index: -1;
  transition: all 0.3s ease;
}

.icon-circle:hover {
  transform: scale(1.1);
}

.icon-circle:hover::after {
  inset: -4px;
  filter: blur(20px);
  opacity: 0.7;
}

.icon {
  width: 32px;
  height: 32px;
  stroke: white;
  stroke-width: 2px;
  fill: none;
}
```

### Form Elements
```css
.form-group {
  margin-bottom: 24px;
}

.form-label {
  display: block;
  font-size: var(--text-body-sm);
  font-weight: 500;
  color: var(--text-secondary);
  margin-bottom: 8px;
}

.form-input {
  width: 100%;
  padding: 14px 20px;
  background: rgba(255, 255, 255, 0.03);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 12px;
  color: var(--text-primary);
  font-size: var(--text-body);
  transition: all 0.3s ease;
}

.form-input:hover {
  background: rgba(255, 255, 255, 0.05);
  border-color: rgba(255, 255, 255, 0.15);
}

.form-input:focus {
  outline: none;
  background: rgba(255, 255, 255, 0.05);
  border-color: var(--app-primary);
  box-shadow: 0 0 0 3px rgba(var(--app-primary-rgb), 0.1);
}

.form-input::placeholder {
  color: var(--text-muted);
}

/* Checkbox and Radio */
.form-checkbox,
.form-radio {
  appearance: none;
  width: 20px;
  height: 20px;
  background: rgba(255, 255, 255, 0.05);
  border: 2px solid rgba(255, 255, 255, 0.2);
  border-radius: 4px;
  cursor: pointer;
  transition: all 0.2s ease;
  position: relative;
}

.form-radio {
  border-radius: 50%;
}

.form-checkbox:checked,
.form-radio:checked {
  background: var(--app-gradient);
  border-color: transparent;
}

.form-checkbox:checked::after {
  content: '✓';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: white;
  font-size: 14px;
  font-weight: bold;
}

.form-radio:checked::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 6px;
  height: 6px;
  background: white;
  border-radius: 50%;
}
```

### Badge System
```css
.badge {
  display: inline-flex;
  align-items: center;
  padding: 6px 12px;
  border-radius: 20px;
  font-size: var(--text-caption);
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  transition: all 0.2s ease;
}

.badge-primary {
  background: rgba(var(--app-primary-rgb), 0.15);
  color: var(--app-primary);
  border: 1px solid rgba(var(--app-primary-rgb), 0.3);
}

.badge-success {
  background: rgba(0, 255, 136, 0.15);
  color: #00FF88;
  border: 1px solid rgba(0, 255, 136, 0.3);
}

.badge-info {
  background: rgba(0, 212, 255, 0.15);
  color: #00D4FF;
  border: 1px solid rgba(0, 212, 255, 0.3);
}

.badge:hover {
  transform: scale(1.05);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}
```

### Metric Cards
```css
.metric-card {
  background: linear-gradient(
    135deg,
    rgba(255, 255, 255, 0.02) 0%,
    rgba(255, 255, 255, 0.01) 100%
  );
  border: 1px solid rgba(255, 255, 255, 0.06);
  border-radius: 16px;
  padding: 24px;
  text-align: center;
  transition: all 0.3s ease;
}

.metric-value {
  font-size: var(--text-display-3);
  font-weight: 900;
  background: var(--app-gradient);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  margin-bottom: 8px;
}

.metric-label {
  font-size: var(--text-body-sm);
  color: var(--text-secondary);
  text-transform: uppercase;
  letter-spacing: 0.1em;
}

.metric-card:hover {
  transform: translateY(-4px);
  border-color: rgba(var(--app-primary-rgb), 0.2);
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
}
```

## Animation System

### Scroll-Triggered Animations
```css
/* Fade In Up */
.fade-in-up {
  opacity: 0;
  transform: translateY(40px);
  transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
}

.fade-in-up.visible {
  opacity: 1;
  transform: translateY(0);
}

/* Fade In Scale */
.fade-in-scale {
  opacity: 0;
  transform: scale(0.9);
  transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
}

.fade-in-scale.visible {
  opacity: 1;
  transform: scale(1);
}

/* Slide In Left/Right */
.slide-in-left {
  opacity: 0;
  transform: translateX(-60px);
  transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
}

.slide-in-right {
  opacity: 0;
  transform: translateX(60px);
  transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
}

.slide-in-left.visible,
.slide-in-right.visible {
  opacity: 1;
  transform: translateX(0);
}

/* Stagger Children */
.stagger-children > * {
  opacity: 0;
  transform: translateY(30px);
  transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

.stagger-children.visible > * {
  opacity: 1;
  transform: translateY(0);
}

.stagger-children.visible > *:nth-child(1) { transition-delay: 0.1s; }
.stagger-children.visible > *:nth-child(2) { transition-delay: 0.2s; }
.stagger-children.visible > *:nth-child(3) { transition-delay: 0.3s; }
.stagger-children.visible > *:nth-child(4) { transition-delay: 0.4s; }
.stagger-children.visible > *:nth-child(5) { transition-delay: 0.5s; }
```

### Parallax Effects
```css
.parallax-container {
  position: relative;
  overflow: hidden;
}

.parallax-element {
  will-change: transform;
  transition: transform 0.1s linear;
}

/* Different parallax speeds */
.parallax-slow { --parallax-speed: 0.5; }
.parallax-medium { --parallax-speed: 0.7; }
.parallax-fast { --parallax-speed: 1.2; }
```

### Hover Animations
```css
/* Float Animation */
@keyframes float {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-20px); }
}

.hover-float:hover {
  animation: float 3s ease-in-out infinite;
}

/* Glow Pulse */
@keyframes glow-pulse {
  0%, 100% { 
    box-shadow: 0 0 20px rgba(var(--app-primary-rgb), 0.5);
  }
  50% { 
    box-shadow: 0 0 40px rgba(var(--app-primary-rgb), 0.8);
  }
}

.hover-glow:hover {
  animation: glow-pulse 2s ease-in-out infinite;
}

/* Rotate 3D */
.hover-3d {
  transform-style: preserve-3d;
  transition: transform 0.3s ease;
}

.hover-3d:hover {
  transform: perspective(1000px) rotateY(10deg) rotateX(-10deg);
}
```

### Loading States
```css
/* Skeleton Loader */
.skeleton {
  position: relative;
  overflow: hidden;
  background: var(--dark-secondary);
  border-radius: 8px;
}

.skeleton::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    90deg,
    transparent 0%,
    rgba(255, 255, 255, 0.05) 50%,
    transparent 100%
  );
  animation: skeleton-shimmer 2s infinite;
}

@keyframes skeleton-shimmer {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

/* Spinner */
.spinner {
  width: 40px;
  height: 40px;
  border: 3px solid rgba(255, 255, 255, 0.1);
  border-top-color: var(--app-primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

/* Progress Bar */
.progress-bar {
  height: 4px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 2px;
  overflow: hidden;
  position: relative;
}

.progress-bar-fill {
  height: 100%;
  background: var(--app-gradient);
  border-radius: 2px;
  transition: width 0.3s ease;
}

.progress-bar-indeterminate .progress-bar-fill {
  width: 30%;
  animation: progress-indeterminate 1.5s ease-in-out infinite;
}

@keyframes progress-indeterminate {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(400%); }
}
```

## Visual Effects

### Gradient Overlays
```css
/* Radial Gradient Backgrounds */
.gradient-radial-top {
  background: radial-gradient(
    ellipse at top,
    rgba(var(--app-primary-rgb), 0.15) 0%,
    transparent 50%
  );
}

.gradient-radial-center {
  background: radial-gradient(
    circle at center,
    rgba(var(--app-primary-rgb), 0.2) 0%,
    transparent 70%
  );
}

.gradient-mesh {
  background: 
    radial-gradient(at 20% 80%, rgba(0, 96, 255, 0.2) 0%, transparent 50%),
    radial-gradient(at 80% 20%, rgba(157, 0, 255, 0.2) 0%, transparent 50%),
    radial-gradient(at 40% 40%, rgba(107, 0, 255, 0.1) 0%, transparent 50%);
}

/* Animated Gradient */
.gradient-animated {
  background: linear-gradient(
    -45deg,
    #0060FF,
    #6B00FF,
    #9D00FF,
    #FF6B00
  );
  background-size: 400% 400%;
  animation: gradient-shift 15s ease infinite;
}

@keyframes gradient-shift {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}
```

### Glass Morphism Variants
```css
/* Light Glass */
.glass-light {
  background: rgba(255, 255, 255, 0.02);
  backdrop-filter: blur(10px) brightness(1.1);
  -webkit-backdrop-filter: blur(10px) brightness(1.1);
  border: 1px solid rgba(255, 255, 255, 0.05);
}

/* Dark Glass */
.glass-dark {
  background: rgba(0, 0, 0, 0.3);
  backdrop-filter: blur(20px) brightness(0.8);
  -webkit-backdrop-filter: blur(20px) brightness(0.8);
  border: 1px solid rgba(255, 255, 255, 0.05);
}

/* Colored Glass */
.glass-colored {
  background: rgba(var(--app-primary-rgb), 0.05);
  backdrop-filter: blur(16px) saturate(200%);
  -webkit-backdrop-filter: blur(16px) saturate(200%);
  border: 1px solid rgba(var(--app-primary-rgb), 0.1);
}

/* Frosted Glass */
.glass-frosted {
  background: rgba(255, 255, 255, 0.01);
  backdrop-filter: blur(40px) saturate(150%);
  -webkit-backdrop-filter: blur(40px) saturate(150%);
  border: 1px solid rgba(255, 255, 255, 0.03);
  box-shadow: 
    inset 0 0 0 1px rgba(255, 255, 255, 0.05),
    0 20px 40px rgba(0, 0, 0, 0.3);
}
```

### Glow Effects
```css
/* Text Glow */
.text-glow {
  text-shadow: 
    0 0 10px rgba(var(--app-primary-rgb), 0.5),
    0 0 20px rgba(var(--app-primary-rgb), 0.3),
    0 0 30px rgba(var(--app-primary-rgb), 0.1);
}

/* Box Glow */
.box-glow {
  box-shadow: 
    0 0 20px rgba(var(--app-primary-rgb), 0.5),
    0 0 40px rgba(var(--app-primary-rgb), 0.3),
    0 0 60px rgba(var(--app-primary-rgb), 0.1);
}

/* Neon Effect */
.neon {
  color: var(--app-primary);
  text-shadow: 
    0 0 10px currentColor,
    0 0 20px currentColor,
    0 0 30px currentColor,
    0 0 40px currentColor;
  animation: neon-flicker 2s infinite alternate;
}

@keyframes neon-flicker {
  0%, 100% { opacity: 1; }
  33% { opacity: 0.8; }
  66% { opacity: 0.9; }
}
```

### Blur and Filter Effects
```css
/* Motion Blur */
.motion-blur {
  filter: blur(0);
  transition: filter 0.3s ease;
}

.motion-blur.moving {
  filter: blur(2px);
}

/* Color Filters */
.filter-saturate {
  filter: saturate(1.5);
}

.filter-hue-rotate {
  animation: hue-rotate 10s linear infinite;
}

@keyframes hue-rotate {
  to { filter: hue-rotate(360deg); }
}
```

## Responsive Design

### Breakpoint System
```css
/* Breakpoint Variables */
:root {
  --screen-xs: 375px;
  --screen-sm: 640px;
  --screen-md: 768px;
  --screen-lg: 1024px;
  --screen-xl: 1280px;
  --screen-2xl: 1536px;
}

/* Mobile First Media Queries */
@media (min-width: 640px) {
  /* Small tablets and up */
}

@media (min-width: 768px) {
  /* Tablets and up */
}

@media (min-width: 1024px) {
  /* Desktops and up */
}

@media (min-width: 1280px) {
  /* Large desktops and up */
}

@media (min-width: 1536px) {
  /* Extra large desktops */
}
```

### Responsive Grid
```css
.grid-responsive {
  display: grid;
  gap: 24px;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
}

@media (min-width: 768px) {
  .grid-responsive {
    gap: 32px;
  }
}

@media (min-width: 1024px) {
  .grid-responsive {
    gap: 40px;
  }
}
```

### Mobile Optimizations
```css
/* Touch-friendly targets */
@media (hover: none) and (pointer: coarse) {
  .btn,
  .nav-item,
  .form-input,
  .form-checkbox,
  .form-radio {
    min-height: 44px;
    min-width: 44px;
  }
  
  /* Disable hover effects on touch */
  .card:hover,
  .btn:hover {
    transform: none;
    box-shadow: none;
  }
}

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* Dark mode optimization */
@media (prefers-color-scheme: dark) {
  /* Already dark by default, but can add overrides */
}

/* High contrast mode */
@media (prefers-contrast: high) {
  * {
    border-width: 2px !important;
  }
  
  .btn {
    border: 2px solid currentColor !important;
  }
}
```

## Accessibility

### Focus Management
```css
/* Custom Focus Styles */
:focus-visible {
  outline: 2px solid var(--app-primary);
  outline-offset: 4px;
  border-radius: 4px;
}

/* Skip Links */
.skip-link {
  position: absolute;
  top: -40px;
  left: 0;
  background: var(--app-primary);
  color: white;
  padding: 8px 16px;
  text-decoration: none;
  border-radius: 0 0 8px 0;
  z-index: 10000;
}

.skip-link:focus {
  top: 0;
}

/* Screen Reader Text */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* Focus Trap Container */
.focus-trap {
  position: relative;
}

.focus-trap:focus-within {
  box-shadow: 0 0 0 3px rgba(var(--app-primary-rgb), 0.2);
}
```

### Color Contrast
```css
/* High Contrast Text */
.text-high-contrast {
  color: var(--text-primary);
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
}

/* Ensure Minimum Contrast Ratios */
.ensure-contrast {
  position: relative;
}

.ensure-contrast::before {
  content: '';
  position: absolute;
  inset: 0;
  background: rgba(0, 0, 0, 0.3);
  z-index: -1;
  border-radius: inherit;
}
```

## Implementation Guidelines

### CSS Architecture
```css
/* Component Naming Convention */
.component-name { }
.component-name__element { }
.component-name--modifier { }

/* Utility Classes */
.u-text-center { text-align: center; }
.u-mt-4 { margin-top: 2rem; }
.u-hidden { display: none; }

/* State Classes */
.is-active { }
.is-loading { }
.is-disabled { }
.has-error { }
```

### Performance Optimizations
```css
/* Use CSS Containment */
.card {
  contain: layout style;
}

/* Optimize Animations */
.animated-element {
  will-change: transform, opacity;
}

/* After animation */
.animated-element.animation-done {
  will-change: auto;
}

/* Use GPU Acceleration */
.gpu-accelerated {
  transform: translateZ(0);
  backface-visibility: hidden;
}
```

### Critical CSS Pattern
```css
/* Above the fold - inline in HTML */
.hero-section,
.navbar {
  /* Critical styles only */
}

/* Below the fold - load async */
.feature-section,
.footer {
  /* Non-critical styles */
}
```

## Code Generation Rules

### When generating UI components:

1. **Always apply the design system**
   - Use CSS custom properties for ALL colors
   - Apply the gradient system appropriately
   - Include hover, focus, and active states

2. **Component hierarchy**
   - Start with semantic HTML
   - Apply base styles from the design system
   - Add component-specific modifications
   - Include responsive variations

3. **Animation implementation**
   - Use scroll-triggered animations for content reveal
   - Apply smooth transitions for all state changes
   - Include parallax effects for hero sections
   - Implement loading states for async content

4. **Glass morphism by default**
   - Apply to cards, modals, and elevated surfaces
   - Use appropriate blur and transparency values
   - Include subtle borders for definition

5. **Responsive first**
   - Mobile-first approach
   - Touch-friendly interactions
   - Performance optimized for mobile

6. **Accessibility always**
   - Proper focus management
   - ARIA labels and roles
   - Keyboard navigation support
   - Screen reader friendly

### TypeScript Component Pattern
```typescript
interface ComponentProps {
  variant?: 'primary' | 'secondary' | 'ghost';
  size?: 'sm' | 'md' | 'lg';
  gradient?: boolean;
  animated?: boolean;
  glass?: boolean;
  className?: string;
}

const Component: React.FC<ComponentProps> = ({
  variant = 'primary',
  size = 'md',
  gradient = true,
  animated = true,
  glass = false,
  className = '',
  ...props
}) => {
  const classes = clsx(
    'component-base',
    `component--${variant}`,
    `component--${size}`,
    {
      'component--gradient': gradient,
      'component--animated': animated,
      'component--glass': glass,
    },
    className
  );
  
  return (
    <div className={classes} {...props}>
      {/* Component content */}
    </div>
  );
};
```

### IMPORTANT: Apply styles to ALL components
- Don't limit styling to just Learn, Projects, Labs, and Portfolio
- Apply the design system to every UI element
- Use the extended color palette for variety
- Create visual hierarchy with the type scale
- Implement smooth scroll experiences throughout