services:
  auth:
    environment:
      API_EXTERNAL_URL: ${API_EXTERNAL_URL}
      # Adicionar debug tempor√°rio
      GOTRUE_LOG_LEVEL: "debug"

  rest:
    environment:
      PGRST_DB_URI: postgres://authenticator:${POSTGRES_PASSWORD}@db:5432/postgres

  realtime:
    environment:
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      APP_NAME: ${APP_NAME}
      PORT: 4000
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: postgres
      DB_SSL: "false"
      SECURE_CHANNELS: "true"
      JWT_SECRET: ${JWT_SECRET}
    # Adicionar restart policy para o realtime
    restart: unless-stopped
    
  kong:
    # Corrigir health check do Kong
    healthcheck:
      test: ["CMD-SHELL", "kong health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Corrigir health check do NextJS
  nextjs:
    environment:
      NEXT_PUBLIC_SUPABASE_URL: https://api.syntropy.cc
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${ANON_KEY}
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
  # Corrigir health check do Storage
  storage:
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:5000/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Remover vector temporariamente
  vector:
    profiles:
      - monitoring